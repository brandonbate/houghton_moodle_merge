# pandas is a python library that makes quick work of difficult data processing tasks.
import pandas as pd
# re is for processing regular expressions
import re

# This excel file is generated by the Class List report (under Faculty Reports) on Power Campus.
# The report gives the class list for all courses offered in a given semester (including half
# semester courses)
df = pd.read_excel('Class List.xlsx')

# We split up the course code (e.g. ACCT 101ONL1) into three separate columns
# In this example, 'Dept Code' is 'ACCT', 'Course Number' is '101' and 'Billing Section' is 'ONL1'
df_course_codes=df["Section"].str.split(r'(\w+)\s(\d+)(\w+)',expand=True)
df['Dept Code'] = df_course_codes[1]
df['Course Number'] = df_course_codes[2]
df['Billing Section'] = df_course_codes[3]

# This restricts to entries that have a Billing Section that beings with O.
# This basically restricts our attention to online courses.
df=df[df['Billing Section'].str.startswith('O')]

# Some Course Titles end with ' - Part 1', ' - Part 2', ' (pt 1)' or ' (pt 2)'. I think it'd be easier 
# to merge  the rosters from these parts together into a single roster when making Moodle roster.
# But if we decide not to do that, just simply comment out the following lines to remove
# this type of merger.
df['Course Title'] = df['Course Title'].str.replace(' - Part 1','').str.replace(' - Part 2','')
df['Course Title'] = df['Course Title'].str.replace(' (pt 1)','').str.replace(' (pt 2)','')

# This creates a list of the online courses.
online_courses = df[['Dept Code','Course Number','Course Title','Instructors']].drop_duplicates()

# We iterate through each online course and grab the course roster.
# We then write the course rosters to a CSV.
for index, row in online_courses.iterrows():

    # This grabs the course_roster for an online course specified by row.
    course_roster = df[(df['Dept Code'] == row['Dept Code']) &
                   (df['Course Number'] == row['Course Number']) &
                   (df['Course Title'] == row['Course Title']) &
                   (df['Instructors'] == row['Instructors'])]
    
    # We TRY to determine whether the course is a first half semester, second half semester or full semester
    # using the 'Half Semester Course' column. At times this can be ambiguous.
    if course_roster['Half Semester Course'].empty:
        session = 'full'
    elif course_roster['Half Semester Course'].isnull().any():
        session = 'full'
    elif course_roster['Half Semester Course'].isin(['First Half (Module 1)','First Half (FULLSEM)']).all():
        session = "first"
    elif course_roster['Half Semester Course'].isin(['Second Half (Module 2)','Second Half (FULLSEM)']).all():
        session = "second"
    else:
        session = "ambiguous"
        
    filename = row['Dept Code'] + '_' + row['Course Number'] + '_' + row['Course Title'] + '_' + row['Instructors'] + '_' + session
    # Uses a regular expression to remove characters not allowed in file names.
    filename = re.sub(r'[/\:*?"<>|]',"",filename) + '.csv'
    
    print("Writing " + filename)
    course_roster.to_csv(filename)
